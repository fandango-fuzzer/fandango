name: Code Checks

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - main
      - dev
  workflow_dispatch: # Enables manual execution from the Actions tab

jobs:
  black-check:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ 3.11 ]  # Python version to run

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install black
        run: |
          pip install black

      - name: Check formatting with black
        run: |
          black --check src

  mypy-check:
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [ 3.11 ]  # Python version to run

    steps:
      # Step 1: Checkout the repository's code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Get changed files
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          # exclude auto-generated files
          files: |
            src/**/*.py
            src/**.py
            !src/fandango/language/parser/FandangoLexer.py|
            !src/fandango/language/parser/sa_fandango.py|
            !src/fandango/language/parser/*Parser*.py|
            !src/fandango/converters/antlr/ANTLRv4*.py
            tests/**/*.py no type checking for tests
            tests/**.py no type checking for tests
          separator: ' '

      # Step 3: Set up Python environment
      - name: Set up Python ${{ matrix.python-version }}
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      # Step 4: Install mypy
      - name: Install dependencies
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
           pip install mypy -e .
        env:
          FANDANGO_SKIP_CPP_PARSER: 1

      # Step 5: Run mypy on changed files
      - name: Run mypy on changed files (Unix)
        if: steps.changed-files.outputs.any_changed == 'true' && matrix.os != 'windows-latest'
        shell: bash
        run: |
          files="${{ steps.changed-files.outputs.all_changed_files }}"
          for file in $files; do
            echo "Checking $file"
            mypy "$file"
          done

      - name: Run mypy on changed files (Windows)
        if: steps.changed-files.outputs.any_changed == 'true' && matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          $files = "${{ steps.changed-files.outputs.all_changed_files }}"
          $fileArray = $files -split ' '
          foreach ($file in $fileArray) {
            if (Test-Path $file) {
              Write-Host "Checking $file"
              mypy $file
            }
          }

